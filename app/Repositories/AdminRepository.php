<?php declare(strict_types=1);

namespace App\Repositories;

use App\Criteria\ActiveCriteria;
use App\DataContainers\Admin\Admin\SearchDataContainer;
use App\Models\Admin\Admin;

class AdminRepository extends AbstractRepository
{
    /**
     * @return string
     *  Return the model
     */
    public function model()
    {
        return Admin::class;
    }

    /**
     * @param          $id
     * @param string[] $columns
     * @return Admin
     */
    public function find($id, $columns = ['*'])
    {
        return parent::find($id, $columns); // TODO: Change the autogenerated stub
    }

    /**
     * @param $field
     * @param null $value
     * @param string[] $columns
     * @return Admin | null
     */
    public function findOneByField($field, $value = null, $columns = ['*']): ?\Illuminate\Database\Eloquent\Model
    {
        return parent::findOneByField($field, $value, $columns); // TODO: Change the autogenerated stub
    }

    public function addAdminCriteriaToQuery()
    {
        $this->pushCriteria($this->app->make(ActiveCriteria::class));
    }

    public function getListAdmin(?SearchDataContainer $searchDataContainer = null)
    {
        $this->addAdminCriteriaToQuery();

        if ($searchDataContainer) {
            $this->applyFilter($searchDataContainer);
        }

        return $this->paginate();
    }

    public function applyFilter(SearchDataContainer $searchDataContainer): self
    {
//		$this->pushCriteria($this->app->make(AdminFilterCriteria::class, compact('searchDataContainer')));

        return $this;
    }

    public function findPerformer($userId): Admin
    {
        return $this->find($userId);
    }
}
